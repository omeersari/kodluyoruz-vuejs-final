{"remainingRequest":"/Users/omersari/Documents/GitHub/final-case/node_modules/babel-loader/lib/index.js!/Users/omersari/Documents/GitHub/final-case/node_modules/eslint-loader/index.js??ref--14-0!/Users/omersari/Documents/GitHub/final-case/tests/unit/Header.spec.js","dependencies":[{"path":"/Users/omersari/Documents/GitHub/final-case/tests/unit/Header.spec.js","mtime":1598373434056},{"path":"/Users/omersari/Documents/GitHub/final-case/node_modules/cache-loader/dist/cjs.js","mtime":1593887229559},{"path":"/Users/omersari/Documents/GitHub/final-case/node_modules/babel-loader/lib/index.js","mtime":1593887229563},{"path":"/Users/omersari/Documents/GitHub/final-case/node_modules/eslint-loader/index.js","mtime":1593887233238}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKdmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKCIvVXNlcnMvb21lcnNhcmkvRG9jdW1lbnRzL0dpdEh1Yi9maW5hbC1jYXNlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2ludGVyb3BSZXF1aXJlRGVmYXVsdCIpOwoKdmFyIF9jaGFpID0gcmVxdWlyZSgiY2hhaSIpOwoKdmFyIF90ZXN0VXRpbHMgPSByZXF1aXJlKCJAdnVlL3Rlc3QtdXRpbHMiKTsKCnZhciBfSGVhZGVyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCJAL2NvbXBvbmVudHMvSGVhZGVyLnZ1ZSIpKTsKCmRlc2NyaWJlKCJIZWFkZXIudnVlIiwgKCkgPT4gewogIGl0KCJjaGVjayB0aGUgbmF2YmFyIHRleHQiLCAoKSA9PiB7CiAgICBjb25zdCB3cmFwcGVyID0gKDAsIF90ZXN0VXRpbHMubW91bnQpKF9IZWFkZXIuZGVmYXVsdCk7CiAgICAoMCwgX2NoYWkuZXhwZWN0KSh3cmFwcGVyLmZpbmQoIiNsb2dvIikudGV4dCgpKS5lcXVhbCgiS29kbHV5b3J1ei1GaW5hbCIpOwogIH0pOwp9KTs="},{"version":3,"sources":["/Users/omersari/Documents/GitHub/final-case/tests/unit/Header.spec.js"],"names":["describe","it","wrapper","Header","find","text","equal"],"mappings":";;;;AAAA;;AACA;;AACA;;AAGAA,QAAQ,CAAC,YAAD,EAAe,MAAM;AAC3BC,EAAAA,EAAE,CAAC,uBAAD,EAA0B,MAAM;AAChC,UAAMC,OAAO,GAAG,sBAAMC,eAAN,CAAhB;AACA,sBAAOD,OAAO,CAACE,IAAR,CAAa,OAAb,EAAsBC,IAAtB,EAAP,EAAqCC,KAArC,CAA2C,kBAA3C;AACD,GAHC,CAAF;AAID,CALO,CAAR","sourcesContent":["import { expect } from \"chai\";\nimport { mount } from \"@vue/test-utils\";\nimport Header from \"@/components/Header.vue\"\n\n\ndescribe(\"Header.vue\", () => {\n  it(\"check the navbar text\", () => {\n    const wrapper = mount(Header);\n    expect(wrapper.find(\"#logo\").text()).equal(\"Kodluyoruz-Final\");\n  });\n});\n\n"]}]}